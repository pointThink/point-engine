#pragma once

namespace PE
{
	class UFP
	{
		public:
		void Call() {}
		bool IsNullPtr() {}
	};

	class FunctionPointer : UFP
	{
		void (*pointer)();

		public:
		FunctionPointer(void (*pointer)());
		void Call();

		void IsNullPtr();
		bool SetNullPtr();
	};

	template<typename T>
	class MethodPointer : UFP
	{
		public:
		MethodPointer(T * object, void (T::*function_pointer)());
		void Call();
		bool IsNullPtr();
		bool SetNullPtr();

		private:
		T * object_pointer;
		void (T::*function_pointer)();
	};
}
